<h1>About</h1>
<p style="text-align: left; padding-left: 30px;">成員:</p>
<p style="text-align: left; padding-left: 30px;">王怡婷:<a href="https://github.com/mdecd2023/resume-41023101">https://github.com/mdecd2023/resume-41023101</a></p>
<p style="text-align: left; padding-left: 30px;">姜連安:<a href="https://github.com/mdecd2023/resume-41023141">https://github.com/mdecd2023/resume-41023141</a></p>
<p style="text-align: left; padding-left: 30px;">倉儲<a href="https://github.com/orgs/mdecd2023/teams/pj1ag19"><span>:https://github.com/mdecd2023/2a-pj1ag19</span></a></p>
<p style="text-align: left; padding-left: 30px;">組別網頁:<a href="https://mdecd2023.github.io/2a-pj1ag19/content/index.html">https://mdecd2023.github.io/2a-pj1ag19/content/index.html</a></p>
<h5 style="padding-left: 30px;"></h5>
<h1>W3</h1>
<p>心得</p>
<p>w3</p>
<p>41023101:因在創建群組時碰到github故障，倉儲在建立時遇到很多問題，後面github正常後有再創建一次，但組別倉儲被歸列到-1底下，後來詢問老師協助，倉儲已順利創建完成</p>
<p>41023141:在一開始的時候github發生了問題，以至於我們在後面建立倉儲的時候屢屢碰壁，後面有老師協助，使我們倉儲成功建立。</p>
<p>w4</p>
<p><span>BubbleRub tutorial 製作結果與心得 presentation (以 Web-based 方式發表):</span></p>
<p><a href="https://mdecd2023.github.io/2a-pj1ag19/content/Tutorial1.html">https://mdecd2023.github.io/2a-pj1ag19/content/Tutorial1.html</a> </p>
<p>w5</p>
<p>欲開啟靜態網頁時，誤將config資料夾中的檔案刪除，導致要開啟靜態網頁時無法順利操作，後來將組別資料夾刪除，重新git clone及創建新的token，靜態網站已能順利啟動。</p><h1>Note</h1>
<h2>token</h2>
<p>Personal access tokens</p>
<p>開啟github帳號點選右上頭像並點選Settings<br/>點選Developer settings<br/>點選Personal access tokens<br/>點選Generate new token(classic)<br/>Note 名稱(任意)<br/>勾選repo(第一個)<br/>點選最下面的Generate token<br/>複製產生出來的token<br/>開啟可攜系統<br/>開啟欲設Personal access tokens的資料夾<br/>點開.git(要開隱藏項目才看的到)<br/>將裡面的congif拉到SciTE(灰色圓球)<br/>將複製的字串貼在github.com的前面再加上@並存檔<span style="background-color: #ffff00;">(CTRL+S)</span><br/>Personal access tokens就設定完成</p>
<h2>TCExam</h2>
<p>資料網址:<a href="https://teams.microsoft.com/_#/school/ClassNotes/w5?threadId=19:a398eb1b5dc841b690f68a4e4dcefdb7@thread.tacv2&amp;ctx=channel">cad2022</a></p>
<p>考試帳號創建</p>
<p>1. (登入 stud.cycu.org)利用 @nfu 電子郵箱收到的帳號與密碼, 登入 stud.cycu.org:  在命令列視窗, 以 ssh cad學號@stud.cycu.org , 輸入對應密後, 可以登入系統<br/><br/>2. 請到 excel 檔案 查詢 stud.cycu.org 中與帳號對應的近端 (給 127.0.0.1 使用) 與遠端 (給 stud.cycu.org) 埠號<br/><br/>3. (透過 sftp 建立近端目錄與 stud.cycu.org 帳號下的對應)  開啟另一個命令列, 執行 sftp 帳號@stud.cycu.org   輸入對應密碼, 即可建立近端目錄與遠端系統目錄間的對應.<br/><br/>4. 與在近端(Windows)利用  SSH 建立 public/private keys 流程相同, 必須在 Linux (Ubuntu) 利用 ssh-keygen 建立 keys. 所產生的 id_rsa 為 private key, 而 id_rsa.pub 為 public key, 都位於 .ssh 目錄下.<br/><br/>5. 利用 sftp  進入 stud.cycu.org 後, cd 到 .ssh, 以 get id_rsa.pub 將 public key 取至  Windows 後, 送到 Github -&gt; Settings -&gt; SSH and GPG 設定區, 透過 new key 登錄公鑰.<br/><br/>6. 接下來要下載  config 設定檔案,  以 sftp 放入 stud.cycu.org 主機的 .ssh 目錄中.<br/><br/>7. 上面的  config  主要設定 SSH 協定對  github.com  連線時的代理主機, 但取下  cmsimde  子模組使用的是  https,  因此執行下列  git clone 時將會同時用到   SSH  與 https  協定,  因此除了  .ssh  目錄下要有  config  設定檔案外, 也必須同時在  .gitconfig  檔案中設定  http.proxy,  也就是以 git config --global http.proxy http://p42.cycu.org:3128 設定供 https 連線使用的代理主機, 並且以  git config --global  user.name 以及  git config --global  user.email 設定提交用的身分註記.<br/><br/>8. 在 stud.cycu.org 中, 以 git clone --recurse-submodules  git@github.com:mdecad2022/site-個人github帳號.git   取下個人倉儲.<br/><br/>9. 假如先前使用  git clone 並沒有取下  cmsimde 子模組內容, 只要在設定 https 代理主機後, 進入倉儲根目錄執行  git submodule update --init  --recursive  即可取下子模組內容.<br/><br/>10. 接著下載 server.py, 在 Windows 編輯 server.py, 將個人分配到的 9xxxx 埠號填入後存檔, 以 sftp 放入上列取下的倉儲根目錄.<br/><br/>11. 在 stud.cycu.org 系統中, 進入倉儲 (site-github帳號) 後, 執行 python3 server.py, 就可啟用動態網站.<br/><br/>12. 設定完成後, 各學員將會有一個廣域網路上的動態網站 (取代 Replit 上的動態網站), https://stud.cycu.org:8xxxx   看到個人的動態網站.<br/><br/>13. 動態網站改版後, 轉為靜態, 必須透過 source acp 以 SSH 將改版內容送回 github. (必須利用 chmod u+x acp 將 acp  檔案屬性改為對  user 可以 execute (也就是 x 屬性).<br/><br/>14. 執行 source acp  "提交字串" 之前必須要 git config  --global user.name, git config  --global user.email, git config  --global http.proxy<br/><br/>15. 上述採用指令模式對  server sftp 也可以利用  Filezilla portable, 以圖形介面完成. 而 ssh 也可以透過  putty.exe 執行遠端登入.</p>
<p></p>
<h1>Tutorial1</h1>
<p>兩球體碰撞</p>
<script>
var 1 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="1" height="630" muted="true" width="1008">
<source src="./../downloads/1.mp4" type="video/mp4"/></video></div>
<h2>BubbleRob</h2>
<script>
var bubblerob2 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="bubblerob2" height="630" muted="true" width="1008">
<source src="./../downloads/bubblerob2.mp4" type="video/mp4"/></video></div>
<h2>感測器 電機及輪體</h2>
<script>
var bubblerob3 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="bubblerob3" height="630" muted="true" width="1008">
<source src="./../downloads/bubblerob3.mp4" type="video/mp4"/></video></div>
<script>
var bubblerob4 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="bubblerob4" height="630" muted="true" width="1008">
<source src="./../downloads/bubblerob4.mp4" type="video/mp4"/></video></div>
<h2>CoppeliaSim模擬</h2>
<p>兩球體碰撞</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/rTcc1ZF83MA" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>final</p>
<p><br/><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/F6rbqcHCBkY" title="YouTube video player" width="560"></iframe></p>
<h1>專案規劃</h1>
<p>1.<strong>定義範疇</strong><br/>這是一個規劃專案的重要第一步，此專案要做甚麼、包含的範圍有多廣，必須在何時完成，你必須把這個大餅畫出來再做細分，才能夠掌握此專案的正確方向。<br/><br/>2.<strong>確定您的專案發起人</strong><br/>每一個專案都會有一個發起人或利益相關者，找出這些人都是誰。</p>
<p><span>他們必定會對此專案有一定的影響力，以確保該專案向前推進時，該找誰來溝通，並且一同策劃專案的方向，有了這個專案發起人，可以讓專案經理更輕鬆的管理專案。</span><br/><br/>3.<strong>確定可用資源</strong><br/>當你在定義範疇的時候，你就必須清楚你需要多少的資源才得以完成此專案，他們是技術性質的嗎？他們需要一個特殊的技能或培訓嗎？他們是已經在公司裡面嗎？或他們需要被聘用或簽約。</p>
<p><span>專案開始之前，你必須把資源分配好。</span><br/><br/>4.<strong>檢查時程</strong><br/>專案規劃最重要的部分就是專案時程，你必須要了解你有多少的事情要做，搭配上你的資源必須花費多少的時間，雖然我們的時間總是在變，我們有許多無法控制的因子，沒有辦法確定正確的時間。</p>
<p><span>但是如果有一個完美的甘特圖，可以讓你更能夠掌握專案的進度。</span><br/><br/>5.<strong>建立WBS</strong><br/>將你的專案展開，越小的事越容易完成，所以把WBS展開的仔細點，會更有幫助。許多人都會選擇用心智圖的方式，能夠簡單明瞭的看到所有的任務項目，讓你在報告的時候也可以有漂亮且專業的圖來呈現。<br/><br/>6.<strong>細分成小步驟</strong><br/>如果接到手上的是一個很大的專案，你可能不知道該從何處下手，如果你把專案切得越細，你就可以更清楚，你所需要的資源和時間，也更能夠做細部的掌控，所以只要有一個好的觀念，相信再大的專案也難不倒你。<br/><br/>7.<strong>制定一個計劃草案</strong><br/>當你正在做一個專案時，你必須清楚到成本、時間、資源，大致上需要做些什麼。你可以把這些擬定成一個計畫草案，這是你第一次把所有的東西都整合在一起，也有可能會寫上專案開始的時間以及預計完成的時間，讓你的團隊們能夠知道整個計畫的概要。<br/><br/>8.<strong>草案檢討與反饋</strong><br/>當你完成了第七步驟的草案後，你就可以發佈給團隊成員們，大家找個時間做個會議，在會議當中，團隊成員們可以對草案提出反饋，在這樣的溝通與互動過程中，能夠將專案計畫導到更接近完美的專案計畫。<br/><br/>9.<strong>完成精確計畫</strong><br/>現在該計劃正在向前推進，透過反饋與檢討讓專案計畫逼近完美了，現在就開始把這些資訊整理、討論該如何去做執行，讓這個專案開始啟動吧！<br/><br/>10.<strong>監測進展情況</strong><br/>開始做執行的階段，你必須不斷監測也許是每一周或是每一天，你必須要好好的規劃，在執行的過程中，難免會出現一些意料之外的事情，所以你必須要趕緊處理，也許是停止或者找解決的方法。</p>
<p><span>身為一個專案經理人，在這個時候是非常重要的，如果搭配一個好的專案軟體，會讓你的專案更加順利。</span><br/><br/>11.<strong>保留所有文件</strong><br/>在執行一個專案時，我們無法確保此專案會一直照著我們的規劃走，如果有些突發狀況，雖然不是我們預期的，但我們還是要把他記錄下來。</p>
<p><span>這樣的專案紀錄可以讓整個專案更逼近寫實，也可以讓之後的成員們，有一些資料能夠參考與學習。</span><br/><br/>12.<strong>專案結束仍要保持聯繫</strong><br/>最後，你已經完成專案了，但是你不能確保此專案之後不會有任何問題，有些地方還是需要專家的幫忙，如果你的技術部門是外包的，那你就必須要隨時與你的外包商聯繫，如果哪一天突然發生突發狀況，你才不會找不到人來幫你處理，隨時關心團隊成員，也可以建立良好的人脈關係唷！</p>